{"version":3,"names":[],"sources":["src/PNotifyReferenceComponent.html"],"sourcesContent":["<!-- This file is for referencing while you are making a PNotify module. -->\n<script context=\"module\">\n  import { icons } from './PNotifyCore';\n\n  // This is the key you use for registering your module with PNotify.\n  export const key = 'Reference';\n\n  // This if the default values of your options.\n  export const defaults = {\n    // Provide a thing for stuff. Turned off by default.\n    putThing: false,\n    // If you are displaying any text, you should use a labels options to\n    // support internationalization.\n    labels: {\n      text: 'Spin Around'\n    }\n  };\n\n  // This is where you would add any styling or icons classes you are using in your code.\n  Object.assign(icons.bootstrap3, {\n    refresh: 'glyphicon glyphicon-refresh'\n  });\n  Object.assign(icons.fontawesome4, {\n    refresh: 'fa fa-refresh'\n  });\n  Object.assign(icons.fontawesome5, {\n    refresh: 'fas fa-sync'\n  });\n</script>\n\n{#if putThing} <!-- We want to check to make sure the notice should include our thing. -->\n  <!--\n  We're going to create a button that will be appended to the notice.\n  It will be disabled by default, so we can enable it on mouseover.\n  -->\n  <button\n      class=\"ui-pnotify-action-button ui-pnotify-reference-button {_notice.getStyle('btn')} {_notice.getStyle('btn-secondary')}\"\n      type=\"button\"\n      disabled=\"{!mouseIsIn}\"\n      on:click={doSomething}>\n    <i class={_notice.getIcon('refresh')} />&nbsp;{labels.text}\n  </button>\n  <!-- Since our button is floated, we have to add a clearing div. -->\n  <div class=\"ui-pnotify-reference-clearing\" />\n{/if}\n\n<script>\n  import { onMount, createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  // The PNotify notice.\n  export let _notice = null;\n\n  // Your options must be exported and set to the defaults.\n  export let putThing = defaults.putThing;\n  export let labels = defaults.labels;\n\n  // Here you can define variables not meant to be exported as options.\n  let mouseIsIn = false;\n\n  // This is the second way to init a module. Because we put markup in the\n  // template, we have to fire this event to tell PNotifyCore that we are ready\n  // to be initialized.\n  onMount(() => {\n    dispatch('init', {\n      // This is optional, and will be called after the DOM is ready and options\n      // have been set.\n      init,\n      // Include these if you need them to run.\n      beforeOpen,\n      afterOpen,\n      beforeClose,\n      afterClose,\n      beforeDestroy,\n      afterDestroy\n    });\n  });\n\n  export function init () {\n    _notice.on('mouseenter', () => mouseIsIn = true);\n    _notice.on('mouseleave', () => mouseIsIn = false);\n  }\n\n  function doSomething () {\n    // Spin the notice around.\n    let curAngle = 0;\n    const timer = setInterval(() => {\n      curAngle += 10;\n      if (curAngle === 360) {\n        curAngle = 0;\n        clearInterval(timer);\n      }\n      _notice.refs.elem.style.transform = 'rotate(' + curAngle + 'deg)';\n    }, 20);\n  }\n\n  // I have nothing to put in these, just showing you that they exist. You\n  // won't need to include them if you aren't using them.\n  function beforeOpen () {\n    // Called before the notice is opened.\n  }\n  function afterOpen () {\n    // Called after the notice is opened.\n  }\n  function beforeClose () {\n    // Called before the notice is closed.\n  }\n  function afterClose () {\n    // Called after the notice is closed.\n  }\n  function beforeDestroy () {\n    // Called before the notice is destroyed.\n  }\n  function afterDestroy () {\n    // Called after the notice is destroyed.\n  }\n</script>\n\n<style>\n  .ui-pnotify-reference-button {\n    float: right;\n    margin-top: 1em;\n  }\n  .ui-pnotify-reference-clearing {\n    clear: right;\n    line-height: 0;\n  }\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;SACW,KAAK,QAAQ,eAAe;SAA5B,OAAO,EAAE,qBAAqB,QAAQ,QAAQ;;;;;;;2BAuCN,GAAM,IAAC,IAAI;;;;;;;;;;;;;;;;oEAAhD,GAAO,IAAC,OAAO,CAAC,SAAS;oHAJ4B,GAAO,IAAC,QAAQ,CAAC,KAAK,sBAAI,GAAO,IAAC,QAAQ,CAAC,eAAe;;4DAE3G,GAAS;;;;;;;;;;qDACX,GAAW;;;mGACb,GAAO,IAAC,OAAO,CAAC,SAAS;;;;mEAAY,GAAM,IAAC,IAAI;;mJAJK,GAAO,IAAC,QAAQ,CAAC,KAAK,sBAAI,GAAO,IAAC,QAAQ,CAAC,eAAe;;;;oGAE3G,GAAS;;;;;;;;;;;;;;;6BARtB,GAAQ;;;;;;;;;;;;oBAAR,GAAQ;;;;;;;;;;;;;;;;;;;;;;MA1BE,GAAG,GAAG,WAAW;;MAGjB,QAAQ;;CAEnB,QAAQ,EAAE,KAAK;;;CAGf,MAAM,IACJ,IAAI,EAAE,aAAa;;;;AAKvB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,IAC5B,OAAO,EAAE,6BAA6B;;AAExC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,IAC9B,OAAO,EAAE,eAAe;AAE1B,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,IAC9B,OAAO,EAAE,aAAa;;SA4Bf,UAAU;;;;SAGV,SAAS;;;;SAGT,WAAW;;;;SAGX,UAAU;;;;SAGV,aAAa;;;;SAGb,YAAY;;;;;OAjEf,QAAQ,GAAG,qBAAqB;OAG3B,OAAO,GAAG,IAAI;OAGd,QAAQ,GAAG,QAAQ,CAAC,QAAQ;OAC5B,MAAM,GAAG,QAAQ,CAAC,MAAM;;;KAG/B,SAAS,GAAG,KAAK;;;;;CAKrB,OAAO;EACL,QAAQ,CAAC,MAAM;;;GAGb,IAAI;;GAEJ,UAAU;GACV,SAAS;GACT,WAAW;GACX,UAAU;GACV,aAAa;GACb,YAAY;;;;UAIA,IAAI;EAClB,OAAO,CAAC,EAAE,CAAC,YAAY,wBAAQ,SAAS,GAAG,IAAI;EAC/C,OAAO,CAAC,EAAE,CAAC,YAAY,wBAAQ,SAAS,GAAG,KAAK;;;UAGzC,WAAW;;MAEd,QAAQ,GAAG,CAAC;;QACV,KAAK,GAAG,WAAW;;IACvB,QAAQ,IAAI,EAAE;;QACV,QAAQ,KAAK,GAAG;KAClB,QAAQ,GAAG,CAAC;KACZ,aAAa,CAAC,KAAK;;;oBAErB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,GAAG,QAAQ,GAAG,MAAM;;GAChE,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}