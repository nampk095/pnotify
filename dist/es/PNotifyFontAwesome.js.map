{"version":3,"names":[],"sources":["src/PNotifyFontAwesome.svelte"],"sourcesContent":["<script context=\"module\">\n  export const position = 'PrependContainer';\n  export const defaults = {};\n</script>\n<script>\n  import { onDestroy, tick } from 'svelte';\n\n  // The PNotify notice.\n  export let self = null;\n\n  // This keeps the beforeUpdate handler from going into a loop when we're\n  // taming Font Awesome's magic.\n  let _updatingIcon = false;\n  let _updatingSticker = false;\n  // Save the old value of icon, so we can do our magic.\n  let _oldIcon = self.icon === true ? self.getIcon(self.type) : self.icon;\n  let _oldSticker = self.getIcon('sticker') + ' ' + (self.hide ? self.getIcon('unstuck') : self.getIcon('stuck'));\n  let newIcon;\n  let newSticker;\n\n  const removeIconHandler = self.on('pnotify:update', async () => {\n    if (_updatingIcon) {\n      return;\n    }\n\n    // Font Awesome 5 uses dark magic by replacing the icon element with an SVG.\n    // In order to make it play nice with Svelte, we have to clear the element\n    // and make it again.\n\n    newIcon = self.icon === true ? self.getIcon(self.type) : self.icon;\n\n    if (newIcon !== _oldIcon && typeof newIcon === 'string' && newIcon.match(/(^| )fa[srlb]($| )/)) {\n      self.icon = false;\n      _updatingIcon = true;\n      await tick();\n      self.icon = newIcon;\n      _updatingIcon = false;\n    }\n\n    // Update seved icon.\n    _oldIcon = newIcon;\n  });\n\n  const removeStickerHandler = self.on('pnotify:update', async () => {\n    if (_updatingSticker) {\n      return;\n    }\n\n    // Font Awesome 5 uses dark magic by replacing the icon element with an SVG.\n    // In order to make it play nice with Svelte, we have to clear the element\n    // and make it again.\n\n    newSticker = self.getIcon('sticker') + ' ' + (self.hide ? self.getIcon('unstuck') : self.getIcon('stuck'));\n\n    if (self.sticker && newSticker !== _oldSticker && typeof newSticker === 'string' && newSticker.match(/(^| )fa[srlb]($| )/)) {\n      self.sticker = false;\n      _updatingSticker = true;\n      await tick();\n      self.sticker = true;\n      _updatingSticker = false;\n    }\n\n    // Update seved icon.\n    _oldSticker = newSticker;\n  });\n\n  onDestroy(() => {\n    removeIconHandler && removeIconHandler();\n    removeStickerHandler && removeStickerHandler();\n  });\n</script>"],"mappings":";;;SACW,SAAS,EAAE,IAAI,QAAQ,QAAQ;MAA3B,QAAQ,GAAG,kBAAkB;MAC7B,QAAQ;;;OAEV,IAAI,GAAG,IAAI;;;;KAIlB,aAAa,GAAG,KAAK;;KACrB,gBAAgB,GAAG,KAAK;;;KAExB,QAAQ,GAAG,IAAI,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI;;KACnE,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI;GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;GAAI,IAAI,CAAC,OAAO,CAAC,OAAO;;KACzG,OAAO;KACP,UAAU;;OAER,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,gBAAgB;MAC5C,aAAa;;;;;;;EAQjB,OAAO,GAAG,IAAI,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI;;MAE9D,OAAO,KAAK,QAAQ,WAAW,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,CAAC,oBAAoB;mBAC3F,IAAI,CAAC,IAAI,GAAG,KAAK;GACjB,aAAa,GAAG,IAAI;SACd,IAAI;mBACV,IAAI,CAAC,IAAI,GAAG,OAAO;GACnB,aAAa,GAAG,KAAK;;;;EAIvB,QAAQ,GAAG,OAAO;;;OAGd,oBAAoB,GAAG,IAAI,CAAC,EAAE,CAAC,gBAAgB;MAC/C,gBAAgB;;;;;;;EAQpB,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI;IAAG,IAAI,CAAC,OAAO,CAAC,SAAS;IAAI,IAAI,CAAC,OAAO,CAAC,OAAO;;MAEpG,IAAI,CAAC,OAAO,IAAI,UAAU,KAAK,WAAW,WAAW,UAAU,KAAK,QAAQ,IAAI,UAAU,CAAC,KAAK,CAAC,oBAAoB;mBACvH,IAAI,CAAC,OAAO,GAAG,KAAK;GACpB,gBAAgB,GAAG,IAAI;SACjB,IAAI;mBACV,IAAI,CAAC,OAAO,GAAG,IAAI;GACnB,gBAAgB,GAAG,KAAK;;;;EAI1B,WAAW,GAAG,UAAU;;;CAG1B,SAAS;EACP,iBAAiB,IAAI,iBAAiB;EACtC,oBAAoB,IAAI,oBAAoB;;;;;;;;;;;;;;;;;;"}